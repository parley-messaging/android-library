apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    namespace "nu.parley"
    compileSdk 34
    defaultConfig {
        applicationId "com.webuildapps.tracebuzz.parleydemo"
        minSdkVersion 21
        targetSdk 34
        versionCode System.getenv("VERSION_CODE") as Integer ?: 1
        versionName rootProject.ext.parley_version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def keyProps = new Properties()
    keyProps.load(rootProject.file("keystore.properties").newReader())
    signingConfigs {
        alpha {
            storeFile file('../alpha.jks')
            storePassword System.getenv("KEYSTORE_ALPHA_PASSWORD") ?: keyProps['KEYSTORE_ALPHA_PASSWORD']
            keyAlias System.getenv("KEYSTORE_ALPHA_KEY") ?: keyProps['KEYSTORE_ALPHA_KEY']
            keyPassword System.getenv("KEYSTORE_ALPHA_KEY_PASSWORD") ?: keyProps['KEYSTORE_ALPHA_KEY_PASSWORD']
        }

        release {
            storeFile file('../release.jks')
            storePassword System.getenv("KEYSTORE_RELEASE_PASSWORD") ?:  keyProps['KEYSTORE_RELEASE_PASSWORD']
            keyAlias System.getenv("KEYSTORE_RELEASE_KEY") ?:  keyProps['KEYSTORE_RELEASE_KEY']
            keyPassword System.getenv("KEYSTORE_RELEASE_KEY_PASSWORD") ?:  keyProps['KEYSTORE_RELEASE_KEY_PASSWORD']
        }
    }


    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "PARLEY Debug"

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        alpha {
            initWith(buildTypes.release)
            matchingFallbacks = ['release']

            applicationIdSuffix '.alpha'
            resValue "string", "app_name", "PARLEY Alpha"
            signingConfig signingConfigs.alpha

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        buildConfig true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.13.1'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.6.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation "com.google.firebase:firebase-messaging:23.4.1"

    // Library
//    implementation 'com.github.parley-messaging:android-library:3.11.1' // Remote
    implementation project(':parley') // Local

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

apply plugin: 'com.google.gms.google-services'
